-- ----------------------------------------------------------------------------
-- Language Extensions
-- ----------------------------------------------------------------------------

{-# LANGUAGE NoImplicitPrelude #-}

-- ----------------------------------------------------------------------------
-- Module declaration
-- ----------------------------------------------------------------------------

module Functor.Sum
  (
    FSum(..)
  ) where

-- ----------------------------------------------------------------------------
-- Internal imports
-- ----------------------------------------------------------------------------

import Functor.Covariant

-- ----------------------------------------------------------------------------
-- Covariant functor sum data type
-- ----------------------------------------------------------------------------

data FSum f g a = FSumL (f a) | FSumR (g a)

-- ----------------------------------------------------------------------------
-- Functor sum instance for Covariant
-- ----------------------------------------------------------------------------

instance (Covariant f, Covariant g) => Covariant (FSum f g) where
  fmap f (FSumL l) = FSumL (fmap f l)
  fmap f (FSumR r) = FSumR (fmap f r)
